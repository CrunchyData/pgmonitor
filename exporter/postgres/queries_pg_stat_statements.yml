###
#
# Begin File: queries_pg_stat_statements.yml
#
###

### TODO Make the limits being returned configurable via sysconfig variables (similar to pgbackrest)

ccp_pg_stat_statements_total_calls:
  query: "SELECT pg_get_userbyid(s.userid) as role,
              d.datname AS dbname,
              sum(s.calls) AS count
          FROM public.pg_stat_statements s
          JOIN pg_catalog.pg_database d
          ON d.oid = s.dbid
          GROUP BY 1,2"
  metrics: 
    - role: 
        usage: "LABEL" 
        description: "Role that executed the statement"
    - dbname: 
        usage: "LABEL" 
        description: "Database in which the statement was executed"
    - count: 
        usage: "GAUGE" 
        description: "Total number of queries run per user/database"


ccp_pg_stat_statements_top_mean:
  query: "SELECT pg_get_userbyid(s.userid) as role,
              d.datname AS dbname,
              s.queryid,
              btrim(replace(left(s.query, 40), '\n', '')) AS query,
              max(s.mean_time) time_ms
          FROM public.pg_stat_statements s
          JOIN pg_catalog.pg_database d
          ON d.oid = s.dbid
          GROUP BY 1,2,3,4
          ORDER BY 5 DESC
          LIMIT 20"
  metrics: 
    - role: 
        usage: "LABEL" 
        description: "Role that executed the statement"
    - dbname: 
        usage: "LABEL" 
        description: "Database in which the statement was executed"
    - queryid:
        usage: "LABEL" 
        description: "Internal hash code, computed from the statement's parse tree"
    - query:
        usage: "LABEL" 
        description: "First 40 characters of query text"
    - time_ms: 
        usage: "GAUGE" 
        description: "Query runtime in milliseconds"


ccp_pg_stat_statements_top_stddev:
  query: "SELECT pg_get_userbyid(s.userid) as role,
              d.datname AS dbname,
              s.queryid,
              btrim(replace(left(s.query, 40), '\n', '')) AS query,
              max(s.stddev_time) time_ms
          FROM public.pg_stat_statements s
          JOIN pg_catalog.pg_database d
          ON d.oid = s.dbid
          GROUP BY 1,2,3,4
          ORDER BY 5 DESC
          LIMIT 20"
  metrics: 
    - role: 
        usage: "LABEL" 
        description: "Role that executed the statement"
    - dbname: 
        usage: "LABEL" 
        description: "Database in which the statement was executed"
    - queryid:
        usage: "LABEL" 
        description: "Internal hash code, computed from the statement's parse tree"
    - query:
        usage: "LABEL" 
        description: "First 40 characters of query text"
    - time_ms: 
        usage: "GAUGE" 
        description: "Query runtime in milliseconds"


# Note that individual query stats can only be reset in PG12
ccp_pg_stat_statements_top_total:
  query: "SELECT pg_get_userbyid(s.userid) as role,
              d.datname AS dbname,
              s.queryid,
              btrim(replace(left(s.query, 40), '\n', '')) AS query,
              s.total_time time_ms
          FROM public.pg_stat_statements s
          JOIN pg_catalog.pg_database d
          ON d.oid = s.dbid
          ORDER BY 5 DESC
          LIMIT 20"
  metrics: 
    - role: 
        usage: "LABEL" 
        description: "Role that executed the statement"
    - dbname: 
        usage: "LABEL" 
        description: "Database in which the statement was executed"
    - queryid:
        usage: "LABEL" 
        description: "Internal hash code, computed from the statement's parse tree"
    - query:
        usage: "LABEL" 
        description: "First 40 characters of query text"
    - time_ms: 
        usage: "GAUGE" 
        description: "Total time spent in the statement, in milliseconds"


# Note that individual query stats can only be reset in PG12
ccp_pg_stat_statements_top_max:
  query: "SELECT pg_get_userbyid(s.userid) as role,
              d.datname AS dbname,
              s.queryid,
              btrim(replace(left(s.query, 40), '\n', '')) AS query,
              s.max_time AS time_ms
          FROM public.pg_stat_statements s
          JOIN pg_catalog.pg_database d
          ON d.oid = s.dbid
          ORDER BY 5 DESC
          LIMIT 20"
  metrics: 
    - role: 
        usage: "LABEL" 
        description: "Role that executed the statement"
    - dbname: 
        usage: "LABEL" 
        description: "Database in which the statement was executed"
    - queryid:
        usage: "LABEL" 
        description: "Internal hash code, computed from the statement's parse tree"
    - query:
        usage: "LABEL" 
        description: "First 40 characters of query text"
    - time_ms: 
        usage: "GAUGE" 
        description: "Maximum time spent in the statement, in milliseconds"


# Gathers all metrics for per query monitoring. WARNING: This can greatly affect Prometheus storage and performance
#ccp_pg_stat_statements:
#  query: "SELECT
#                pg_get_userbyid(s.userid) as role,
#                d.datname AS dbname,
#                s.queryid,
#                s.calls,
#                s.total_time AS total_time_ms,
#                s.min_time AS min_time_ms,
#                s.max_time AS max_time_ms,
#                s.mean_time AS mean_time_ms,
#                s.stddev_time AS stddev_time_ms,
#                s.rows,
#                s.shared_blks_hit,
#                s.shared_blks_read,
#                s.shared_blks_dirtied,
#                s.shared_blks_written,
#                s.local_blks_hit,
#                s.local_blks_read,
#                s.local_blks_dirtied,
#                s.local_blks_written,
#                s.temp_blks_read,
#                s.temp_blks_written,
#                s.blk_read_time AS blk_read_time_ms,
#                s.blk_write_time AS blk_write_time_ms
#            FROM public.pg_stat_statements s
#            JOIN pg_catalog.pg_database d
#            ON d.oid = s.dbid"
#  metrics: 
#    - role: 
#        usage: "LABEL" 
#        description: "Role that executed the statement"
#    - dbname: 
#        usage: "LABEL" 
#        description: "Database in which the statement was executed"
#    - queryid: 
#        usage: "LABEL" 
#        description: "Internal hash code, computed from the statement's parse tree"
#    - calls: 
#        usage: "GAUGE" 
#        description: "Number of times executed"
#    - total_time_ms: 
#        usage: "GAUGE" 
#        description: "Total time spent in the statement, in milliseconds"
#    - min_time_ms: 
#        usage: "GAUGE" 
#        description: "Minimum time spent in the statement, in milliseconds"
#    - max_time_ms: 
#        usage: "GAUGE" 
#        description: "Maximum time spent in the statement, in milliseconds"
#    - mean_time_ms: 
#        usage: "GAUGE" 
#        description: "Mean time spent in the statement, in milliseconds"
#    - stddev_time_ms: 
#        usage: "GAUGE" 
#        description: "Population standard deviation of time spent in the statement, in milliseconds"
#    - rows: 
#        usage: "GAUGE" 
#        description: "Total number of rows retrieved or affected by the statement"
#    - shared_blks_hit: 
#        usage: "GAUGE" 
#        description: "Total number of shared block cache hits by the statement"
#    - shared_blks_read: 
#        usage: "GAUGE" 
#        description: "Total number of shared blocks read by the statement"
#    - shared_blks_dirtied: 
#        usage: "GAUGE" 
#        description: "Total number of shared blocks dirtied by the statement"
#    - shared_blks_written: 
#        usage: "GAUGE" 
#        description: "Total number of shared blocks written by the statement"
#    - local_blks_hit: 
#        usage: "GAUGE" 
#        description: "Total number of local block cache hits by the statement"
#    - local_blks_read: 
#        usage: "GAUGE" 
#        description: "Total number of local blocks read by the statement"
#    - local_blks_dirtied: 
#        usage: "GAUGE" 
#        description: "Total number of local blocks dirtied by the statement"
#    - local_blks_written: 
#        usage: "GAUGE" 
#        description: "Total number of local blocks written by the statement"
#    - temp_blks_read: 
#        usage: "GAUGE" 
#        description: "Total number of temp blocks read by the statement"
#    - temp_blks_written: 
#        usage: "GAUGE" 
#        description: "Total number of temp blocks written by the statement"
#    - blk_read_time_ms: 
#        usage: "GAUGE" 
#        description: "Total time the statement spent reading blocks, in milliseconds (if track_io_timing is enabled, otherwise zero)"
#    - blk_write_time_ms: 
#        usage: "GAUGE" 
#        description: "Total time the statement spent writing blocks, in milliseconds (if track_io_timing is enabled, otherwise zero)"

###
#
# End File: queries_pg_stat_statements.yml
#
###

