ccp_backrest_last_runtime:
    query: "WITH all_backups AS
          (SELECT config_file 
                , jsonb_array_elements(data)->>'name' as stanza
                , jsonb_array_elements(jsonb_array_elements(data)->'backup') as backups 
                FROM monitor.pgbackrest_info())
          SELECT config_file 
                , stanza
                , backups->>'type' AS backup_type
                , EXTRACT(epoch FROM ( (max(to_timestamp((backups->'timestamp'->>'stop')::bigint))) - (max(to_timestamp((backups->'timestamp'->>'start')::bigint))) ) )  AS backup_runtime_seconds
          FROM all_backups 
          GROUP BY config_file, stanza, backups->>'type'"
    metrics:
        - config_file:
            usage: "LABEL"
            description: "Configuration file for this backup"
        - stanza:
            usage: "LABEL"
            description: "PGBackrest Stanza Name"
        - backup_type:
            usage: "LABEL"
            description: "Backup type"
        - backup_runtime_seconds:
            usage: "GAUGE"
            description: "Total runtime in seconds of this backup"



ccp_backrest_last_full_backup:
    query: "WITH all_backups AS
          (SELECT config_file 
                , jsonb_array_elements(data)->>'name' as stanza
                , jsonb_array_elements(jsonb_array_elements(data)->'backup') as backups 
                FROM  monitor.pgbackrest_info())
          SELECT config_file 
                , stanza
                , EXTRACT(epoch FROM (CURRENT_TIMESTAMP - (max(to_timestamp((backups->'timestamp'->>'stop')::bigint)))))  AS time_since_completion_seconds
          FROM all_backups where backups->>'type' = 'full' 
          GROUP BY config_file, stanza"
    metrics:
        - config_file:
            usage: "LABEL"
            description: "Configuration file for this backup"
        - stanza: 
            usage: "LABEL"
            description: "PGBackrest Stanza Name"
        - time_since_completion_seconds:
            usage: "GAUGE"
            description: "Seconds since the last completed full backup"


ccp_backrest_last_incr_backup:
    query: "WITH all_backups AS
          (SELECT config_file 
                , jsonb_array_elements(data)->>'name' as stanza
                , jsonb_array_elements(jsonb_array_elements(data)->'backup') as backups 
                FROM  monitor.pgbackrest_info())
          SELECT config_file 
                , stanza
                , EXTRACT(epoch FROM (CURRENT_TIMESTAMP - (max(to_timestamp((backups->'timestamp'->>'stop')::bigint)))))  AS time_since_completion_seconds
          FROM all_backups where backups->>'type' IN ('full' , 'diff', 'incr')
          GROUP BY config_file, stanza"
    metrics:
        - config_file:
            usage: "LABEL"
            description: "Configuration file for this backup"
        - stanza: 
            usage: "LABEL"
            description: "PGBackrest Stanza Name"
        - time_since_completion_seconds:
            usage: "GAUGE"
            description: "Seconds since the last completed full, differential or incremental backup. Incremental is always based off last full or differential."


ccp_backrest_last_diff_backup:
    query: "WITH all_backups AS
          (SELECT config_file 
                , jsonb_array_elements(data)->>'name' as stanza
                , jsonb_array_elements(jsonb_array_elements(data)->'backup') as backups 
                FROM  monitor.pgbackrest_info())
          SELECT config_file 
                , stanza
                , EXTRACT(epoch FROM (CURRENT_TIMESTAMP - (max(to_timestamp((backups->'timestamp'->>'stop')::bigint)))))  AS time_since_completion_seconds
          FROM all_backups where backups->>'type' IN ('full' , 'diff')
          GROUP BY config_file, stanza"
    metrics:
        - config_file:
            usage: "LABEL"
            description: "Configuration file for this backup"
        - stanza: 
            usage: "LABEL"
            description: "PGBackrest Stanza Name"
        - time_since_completion_seconds:
            usage: "GAUGE"
            description: "Seconds since the last completed full or differential backup. Differential is always based off last full."
