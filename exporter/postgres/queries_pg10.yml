

ccp_replication_lag:
  query: "SELECT
           CASE
           WHEN pg_last_wal_receive_lsn() = pg_last_wal_replay_lsn() THEN 0
           ELSE EXTRACT (EPOCH FROM now() - pg_last_xact_replay_timestamp())::INTEGER
           END
        AS replay_time"
  metrics:
    - replay_time:
        usage: "GAUGE"
        description: "Length of time since the last transaction was replayed on replica. Will always increase if no writes on primary."


ccp_replication_lag_size:
  query: "SELECT client_addr as replica, pg_wal_lsn_diff(sent_lsn, replay_lsn) as bytes FROM pg_catalog.pg_stat_replication"
  metrics:
    - replica:
        usage: "LABEL"
        description: "Replica address"
    - bytes:
        usage: "GAUGE"
        description: "Replication lag in bytes"


ccp_replication_slots:
  query: "SELECT slot_name, active::int, pg_wal_lsn_diff(pg_current_wal_insert_lsn(), restart_lsn) AS retained_bytes FROM pg_catalog.pg_replication_slots"
  metrics:
    - slot_name:
        usage: "LABEL"
        description: "Name of replication slot"
    - active: 
        usage: "GAUGE" 
        description: "Active state of slot. 1 = true. 0 = false."
    - retained_bytes:
        usage: "GAUGE"
        description: "The amount of WAL (in bytes) being retained for this slot"


ccp_wait_types:
  query: "SELECT backend_xid, wait_event, wait_event_type FROM monitor.pg_stat_activity() WHERE backend_xid is not null"
  metrics:
    - backend_xid:
        usage: "LABEL"
        description: "Top-level transaction identifier of this backend, if any"
    - wait_event:
        usage: "LABEL"
        description: "Wait event name if backend is currently waiting"
    - wait_event_type:
        usage: "LABEL"
        description: "The type of event for which the backend is waiting"


