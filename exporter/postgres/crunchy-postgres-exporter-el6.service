#!/bin/bash
#
#	/etc/init.d/postgres_exporter
#
# chkconfig: 2345 80 80
#


# Source function library.
. /etc/init.d/functions


RETVAL=0
PROG="postgres_exporter"
SYSCONFIG="postgres_exporter"
DAEMON_SYSCONFIG=/etc/sysconfig/${SYSCONFIG}
DAEMON=/usr/bin/${PROG}
PID_FILE=/var/run/${PROG}/${SYSCONFIG}.pid
LOCK_FILE=/var/lock/subsys/${SYSCONFIG}
LOG_FILE=/var/log/${PROG}/${SYSCONFIG}.log
DAEMON_USER="ccp_monitoring"
GOMAXPROCS=$(grep -c ^processor /proc/cpuinfo)

. ${DAEMON_SYSCONFIG}

# Env vars are reset by init.d, so explicitly export so exporter can see it
export DATA_SOURCE_NAME=$DATA_SOURCE_NAME

start() {
  if check_status > /dev/null; then
    echo "postgres_exporter is already running"
    exit 0
  fi

#  do_start_prepare

  echo -n $"Starting postgres_exporter: "
  echo  $DATA_SOURCE_NAME
  daemonize -u ${DAEMON_USER} -p ${PID_FILE} -l ${LOCK_FILE} -a -e ${LOG_FILE} -o ${LOG_FILE} ${DAEMON} $OPT
  RETVAL=$?
  echo 
  return $RETVAL
}

stop() {
    echo -n $"Stopping postgres_exporter: "
    killproc -p ${PID_FILE} -d 10 ${DAEMON}
    RETVAL=$?
    echo
    [ $RETVAL = 0 ] && rm -f ${LOCK_FILE} ${PID_FILE}
    return $RETVAL
}  

check_status() {
    status -p ${PID_FILE} ${DAEMON}
    RETVAL=$?
    return $RETVAL
}

case "$1" in
    start)
        start
        ;;
    stop)
        stop
        ;;
    status)
	check_status
        ;;
    restart)
        stop
        start
        ;;
    *)
        N=/etc/init.d/${NAME}
        echo "Usage: $N {start|stop|status|restart}" >&2
        RETVAL=2
        ;;
esac

exit ${RETVAL}
