##### POSTGRESQL CHECKS #####
ALERT PGIsReady
  IF ccp_pg_ready < 1
  FOR 10s
  LABELS { service = "postgresql", severity = "critical" }
  ANNOTATIONS {
    summary = "PGSQL Instance running on {{ $labels.job }} is down",
  }

ALERT PGIdleTxn
  IF ccp_connection_stats_max_idle_in_txn_time > 300 
  FOR 10s
  LABELS { service = "postgresql", severity = "warning" }
  ANNOTATIONS {
    summary = "PGSQL Instance idle transactions",
    description = "{{ $labels.job }} has at least one session idle in transaction for over 5 minutes.",
  }

ALERT PGIdleTxn
  IF ccp_connection_stats_max_idle_in_txn_time > 900
  FOR 10s
  LABELS { service = "postgresql", severity = "critical" }
  ANNOTATIONS {
    summary = "PGSQL Instance idle transactions",
    description = "{{ $labels.job }} has at least one session idle in transaction for over 15 minutes.",
  }

ALERT PGConnPerc
    IF (ccp_connection_stats_total / ccp_connection_stats_max_connections) > .9
    FOR 10s
    LABELS { service = "postgresql", severity = "critical" }
    ANNOTATIONS {
        summary = "PGSQL Instance connections",
        description = "{{ $labels.job }} is using 90% or more of available connections ({{ $value }}%)"
    }

ALERT PGConnPerc
    IF (ccp_connection_stats_total / ccp_connection_stats_max_connections) > .75
    FOR 10s
    LABELS { service = "postgresql", severity = "warning" }
    ANNOTATIONS {
        summary = "PGSQL Instance connections",
        description = "{{ $labels.job }} is using 75% or more of available connections ({{ $value }}%)"
    }

ALERT PGDBSize
    IF ccp_database_size > 107374182400 
    FOR 10s
    LABELS { service = "postgresql", severity = "warning" }
    ANNOTATIONS {
        summary = "PGSQL Instance size warning",
        description = "PGSQL Instance {{ $labels.job }} over 100GB in size: {{ $value }} bytes"
    }

ALERT PGDBSize
    IF ccp_database_size > 268435456000 
    FOR 10s
    LABELS { service = "postgresql", severity = "critical" }
    ANNOTATIONS {
        summary = "PGSQL Instance size critical",
        description = "PGSQL Instance {{ $labels.job }} over 250GB in size: {{ $value }} bytes"
    }

ALERT PGReplicationByteLag
    IF ccp_replication_status_byte_lag > 52428800 
    FOR 10s
    LABELS { service = "postgresql", severity = "warning" }
    ANNOTATIONS {
        summary = "PGSQL Instance replica lag warning",
        description = "PGSQL Instance {{ $labels.job }} has at least one replica lagging over 50MB behind."
    }

ALERT PGReplicationByteLag
    IF ccp_replication_status_byte_lag > 104857600
    FOR 10s
    LABELS { service = "postgresql", severity = "critical" }
    ANNOTATIONS {
        summary = "PGSQL Instance replica lag warning",
        description = "PGSQL Instance {{ $labels.job }} has at least one replica lagging over 100MB behind."
    }

ALERT PGReplicationSlotsInactive
    IF ccp_replication_slots_active == 0
    FOR 10s
    LABELS { service = "postgresql", severity = "critical" }
    ANNOTATIONS {
        summary = "PGSQL Instance inactive replication slot",
        description = "PGSQL Instance {{ $labels.job }} has one or more inactive replication slots"
    }

ALERT PGXIDWraparound
    IF ccp_transaction_wraparound_percent_towards_wraparound > 50
    FOR 10s
    LABELS { service = "postgresql", severity = "warning" }
    ANNOTATIONS {
        summary = "PGSQL Instance {{ $labels.job }} transaction id wraparound imminent",
        description = "PGSQL Instance {{ $labels.job }} is over 50% towards transaction id wraparound."
    }

ALERT PGXIDWraparound
    IF ccp_transaction_wraparound_percent_towards_wraparound > 75
    FOR 10s
    LABELS { service = "postgresql", severity = "critical" }
    ANNOTATIONS {
        summary = "PGSQL Instance transaction id wraparound imminent",
        description = "PGSQL Instance {{ $labels.job }} is over 75% towards transaction id wraparound."
    }

ALERT PGEmergencyVacuum
    IF ccp_transaction_wraparound_percent_towards_emergency_autovac > 75
    FOR 10s
    LABELS { service = "postgresql", severity = "warning" }
    ANNOTATIONS {
        summary = "PGSQL Instance emergency vacuum imminent",
        description = "PGSQL Instance {{ $labels.job }} is over 75% towards emergency autovacuum processes beginning"
    }

ALERT PGEmergencyVacuum
    IF ccp_transaction_wraparound_percent_towards_emergency_autovac > 90
    FOR 10s
    LABELS { service = "postgresql", severity = "critical" }
    ANNOTATIONS {
        summary = "PGSQL Instance emergency vacuum imminent", 
        description = "PGSQL Instance {{ $labels.job }} is over 90% towards emergency autovacuum processes beginning"
    }


#### SYSTEM CHECKS ####
# Verify that "device" and "fstype" match the values relevant to your systems

ALERT ExporterDown
  IF up{} == 0
  FOR 10s
  LABELS { service = "system", severity = "critical" }
  ANNOTATIONS {
    summary = "Prometheus Exporter Service Down",
    description = "Metrics exporter service for {{ $labels.job }} running on {{ $labels.instance }} has been down for more than 10 seconds.",
  }


ALERT DiskUsagePerc
    IF (100.0 - 100 * sum by (device) (node_filesystem_avail{device !~'tmpfs|by-uuid', fstype =~'xfs|ext'} / node_filesystem_size{device !~'tmpfs|by-uuid', fstype =~'xfs|ext'})) > 70
    FOR 120s
    LABELS { service = "system", severity = "warning" }
    ANNOTATIONS {
        description = "Disk usage on target {{ $labels.job }} at {{ value }}%",
    }

ALERT DiskUsagePerc
    IF (100.0 - 100 * sum by (device) (node_filesystem_avail{device !~'tmpfs|by-uuid', fstype =~'xfs|ext'} / node_filesystem_size{device !~'tmpfs|by-uuid', fstype =~'xfs|ext'})) > 85 
    FOR 120s
    LABELS { service = "system", severity = "critical" }
    ANNOTATIONS {
        description = "Disk usage on target {{ $labels.job }} at {{ $value }}%",
    }

ALERT DiskFillPredict
    IF predict_linear(node_filesystem_free{device !~'tmpfs|by-uuid', fstype =~'xfs|ext'}[1h], 4*3600) < 0 
    FOR 5m
    LABELS { service = "system", severity = "warning" }
    ANNOTATIONS {
        description = "(EXPERIMENTAL) Disk {{ $labels.device }} on target {{ $labels.job }} is predicted to fill in 4 hrs based on current usage"
    }

ALERT SystemLoad5m
    IF node_load5 > 5
    FOR 60s
    LABELS { service = "system", severity = "warning" }
    ANNOTATIONS {
        description = "System load for target {{ $labels.job }} is high ({{ $values }})"
    }

ALERT SystemLoad5m
    IF node_load5 > 10 
    FOR 60s
    LABELS { service = "system", severity = "critical" }
    ANNOTATIONS {
        description = "System load for target {{ $labels.job }} is high ({{ $values }})"
    }

ALERT MemoryAvailable
    IF (100 * (node_memory_Available) / node_memory_MemTotal) < 25 
    FOR 60s
    LABELS { service = "system", severity = "warning" }
    ANNOTATIONS {
        description = "Memory available for target {{ $labels.job }} is at {{ $value }}%"
    }

ALERT MemoryAvailable
    IF (100 * (node_memory_MemAvailable) / node_memory_MemTotal) < 10
    FOR 60s
    LABELS { service = "system", severity = "critical" }
    ANNOTATIONS {
        description = "Memory available for target {{ $labels.job }} is at {{ $value }}%"
    }

ALERT SwapUsage
    IF (100 - (100 * (node_memory_SwapFree / node_memory_SwapTotal))) > 60
    FOR 60s
    LABELS { service = "system", severity = "warning" }
    ANNOTATIONS {
        description = "Swap usage for target {{ $labels.job }} is at {{ $value }}%"
    }

ALERT SwapUsage
    IF (100 - (100 * (node_memory_SwapFree / node_memory_SwapTotal))) > 80 
    FOR 60s
    LABELS { service = "system", severity = "critical" }
    ANNOTATIONS {
        description = "Swap usage for target {{ $labels.job }} is at {{ $value }}%"
    }


