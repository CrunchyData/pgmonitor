global:
  scrape_interval:   15s # By default, scrape targets every 15 seconds.

# Attach these labels to any time series or alerts when communicating with
# external systems (federation, remote storage, Alertmanager).
#external_labels:
#  monitor: 'codelab-monitor'

# A scrape configuration containing exactly one endpoint to scrape:
# Here it's Prometheus itself.
#scrape_configs:
#  - job_name: 'prometheus'
#    scrape_interval: 30s
#    static_configs:
#    - targets: ['localhost:9090']

scrape_configs:
  - job_name: 'default-auto-discovery'
    scrape_interval: 30s
    file_sd_configs:
    - files:
      - /etc/prometheus/auto.d/*.yml

    metric_relabel_configs:
    # Do not store the metrics that come built into postgres_exporter
    # Version 0.4.5+ of postgres_exporter has option to disable most of these, but ignore here as well for older versions
    - source_labels: [ __name__ ]
      regex: '(pg_locks_count.*|pg_settings.*|pg_stat_activity.*|pg_stat_bgwriter.*|pg_stat_database.*)'
      action: drop
    # Version 0.5+ of postgres_exporter automatically adds a "server" label to all custom query metrics. This breaks upgrades from older versions
    # of pgmonitor and also breaks our PG Overview dashboard and several other single metric panels. 
    # pgmonitor only runs two exporters max by default and our per-db exporter distinguishes each metric by a dbname label, 
    # so we do not need the "server" label. This relabel will only target metrics that start with "ccp_", so shouldn't break users' custom metrics.
    - source_labels: [__name__, server] 
      regex: "ccp_.*;.+" 
      action: replace 
      target_label: server 
      replacement: ""

  ## Monitoring for tcp services that don't have an associated exporter can be accomplished using the tcp probe 
  ##   of the blackbox_exporter provided by the Prometheus developers.
  ## Note this only provides a simple up/down that the service is listening on the given IP/port.
  ## If an exporter is available, it is advised to use an Absence alert vs the blackbox probe.  
  ## Below is an example to monitor the services indicated by the comment. 
  ## The "targets" list is all that should need to be edited to customize to your setup assuming blackbox_exporter runs
  ##   on same system as Prometheus.
  # - job_name: 'blackbox_tcp_services'
  #   metrics_path: /probe
  #   params:
  #     module: [tcp_connect]
  #   relabel_configs:
  #     - source_labels: [__address__]
  #       target_label: __param_target
  #     - source_labels: [__param_target]
  #       target_label: instance
  #     - target_label: __address__
  #       replacement: 127.0.0.1:9115
  #   static_configs:
  #     - targets:
  #       - 127.0.0.1:3000 # grafana
  #       - 192.168.122.16:8009 # patroni
  #       - 192.168.122.26:8009 # patroni
  #       - 192.168.122.36:8009 # patroni
  #       - 192.168.122.12:7000 # haproxy


#### Uncomment below if using alertmanager ####        
#
rule_files:
  - /etc/prometheus/alert-rules.d/*.yml
#
#alerting:
#  alertmanagers:
#  - scheme: http
#    static_configs:
#    - targets:
#      - "127.0.0.1:9093"

