
collector_name: crunchy_pg_stat_statements

metrics:
  - metric_name: ccp_pg_stat_statements_total_calls_count
    type: gauge
    help: "Total number of queries run per user/database"
    values: [calls_count]
    key_labels:
      - role
      - dbname
    query_ref: ccp_pg_stat_statements_total
  - metric_name: ccp_pg_stat_statements_total_exec_time_ms
    type: gauge
    help: "Total runtime of all queries per user/database"
    values: [exec_time_ms]
    key_labels:
      - role
      - dbname
    query_ref: ccp_pg_stat_statements_total
  - metric_name: ccp_pg_stat_statements_total_mean_exec_time_ms
    type: gauge
    help: "Mean runtime of all queries per user/database"
    values: [mean_exec_time_ms]
    key_labels:
      - role
      - dbname
    query_ref: ccp_pg_stat_statements_total
  - metric_name: ccp_pg_stat_statements_total_row_count
    type: gauge
    help: "Total rows returned from all queries per user/database"
    values: [row_count]
    key_labels:
      - role
      - dbname
    query_ref: ccp_pg_stat_statements_total


  - metric_name: ccp_pg_stat_statements_top_mean_exec_time_ms
    type: gauge
    help: "Average query runtime in milliseconds"
    values: [exec_time_ms]
    key_labels:
      - role
      - dbname
      - queryid
      - query
    query_ref: ccp_pg_stat_statements_top_mean


  - metric_name: ccp_pg_stat_statements_top_total_exec_time_ms
    type: gauge
    help: "Total time spent in the statement in milliseconds"
    values: [exec_time_ms]
    key_labels:
      - role
      - dbname
      - queryid
      - query
    query_ref: ccp_pg_stat_statements_top_total


  - metric_name: ccp_pg_stat_statements_top_max_exec_time_ms
    type: gauge
    help: "Maximum time spent in the statement in milliseconds"
    values: [exec_time_ms]
    key_labels:
      - role
      - dbname
      - queryid
      - query
    query_ref: ccp_pg_stat_statements_top_max


  - metric_name: ccp_pg_stat_statements_top_wal_records
    type: gauge
    help: "Total number of WAL records generated by the statement"
    values: [records]
    key_labels:
      - role
      - dbname
      - queryid
      - query
    query_ref: ccp_pg_stat_statements_top_wal

  - metric_name: ccp_pg_stat_statements_top_wal_fpi
    type: gauge
    help: "Total number of WAL full page images generated by the statement"
    values: [fpi]
    key_labels:
      - role
      - dbname
      - queryid
      - query
    query_ref: ccp_pg_stat_statements_top_wal

  - metric_name: ccp_pg_stat_statements_top_wal_bytes
    type: gauge
    help: "Total amount of WAL generated by the statement in bytes"
    values: [bytes]
    key_labels:
      - role
      - dbname
      - queryid
      - query
    query_ref: ccp_pg_stat_statements_top_wal


########## QUERIES ##########
queries:
  - query_name: ccp_pg_stat_statements_top_total
    query: |
      SELECT role
        , dbname
        , queryid
        , query
        , total_exec_time exec_time_ms
      FROM pgmonitor_ext.pg_stat_statements_func()
      ORDER BY 5 DESC
      LIMIT 20

  - query_name: ccp_pg_stat_statements_top_mean
    query: |
      SELECT role
        , dbname
        , queryid
        , query
        , max(mean_exec_time) exec_time_ms
      FROM pgmonitor_ext.pg_stat_statements_func()
      GROUP BY 1,2,3,4
      ORDER BY 5 DESC
      LIMIT 20

  - query_name: ccp_pg_stat_statements_total
    query: |
      SELECT role
        , dbname
        , sum(calls) AS calls_count
        , sum(total_exec_time) AS exec_time_ms
        , avg(mean_exec_time) AS mean_exec_time_ms
        , sum(rows) AS row_count
      FROM pgmonitor_ext.pg_stat_statements_func()
      GROUP BY 1,2

  - query_name: ccp_pg_stat_statements_top_max
    query: |
      SELECT role
        , dbname
        , queryid
        , query
        , max_exec_time AS exec_time_ms
      FROM pgmonitor_ext.pg_stat_statements_func()
      ORDER BY 5 DESC
      LIMIT 20

  - query_name: ccp_pg_stat_statements_top_wal
    query: |
      SELECT role
        , dbname
        , queryid
        , query
        , wal_records AS records
        , wal_fpi AS fpi
        , wal_bytes AS bytes
      FROM pgmonitor_ext.pg_stat_statements_func()
      ORDER BY wal_bytes DESC
      LIMIT 20
